name: Send Cold Emails

on:
  schedule:
    # Every 5 minutes between 2:00 PM and 7:00 PM WAT (13:00‚Äì18:55 UTC) on weekdays
    - cron: "0-55/5 13-18 * * 1-5"
  workflow_dispatch:

jobs:
  run-email-campaign:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
      AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
      AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      IMAP_SERVER: ${{ secrets.IMAP_SERVER }}
      IMAP_PORT: ${{ secrets.IMAP_PORT }}
      ZOHO_CLIENT_ID: ${{ secrets.ZOHO_CLIENT_ID }}
      ZOHO_CLIENT_SECRET: ${{ secrets.ZOHO_CLIENT_SECRET }}
      ZOHO_REFRESH_TOKEN: ${{ secrets.ZOHO_REFRESH_TOKEN }}
      ZOHO_ACCOUNT_ID: ${{ secrets.ZOHO_ACCOUNT_ID }}
      FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
      ZOHO_FROM_ADDRESS: ${{ secrets.FROM_EMAIL }}

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: ‚úÖ Verify required secrets
        run: |
          REQUIRED_VARS=(
            "AIRTABLE_API_KEY"
            "AIRTABLE_BASE_ID"
            "AIRTABLE_TABLE_NAME"
            "GROQ_API_KEY"
            "OPENAI_API_KEY"
            "EMAIL_ADDRESS"
            "EMAIL_PASSWORD"
            "SMTP_SERVER"
            "SMTP_PORT"
            "IMAP_SERVER"
            "IMAP_PORT"
            "ZOHO_CLIENT_ID"
            "ZOHO_CLIENT_SECRET"
            "ZOHO_REFRESH_TOKEN"
            "FROM_EMAIL"
          )
          for VAR in "${REQUIRED_VARS[@]}"; do
            if [[ -z "${!VAR}" ]]; then
              echo "‚ùå Required secret $VAR is not set."
              exit 1
            fi
          done
          echo "‚úÖ All required secrets are present."

      - name: üîå Test SMTP connection
        run: |
          echo "üß™ Running SMTP connection test..."
          python -c "
import smtplib, os
server = smtplib.SMTP(os.environ['SMTP_SERVER'], int(os.environ['SMTP_PORT']))
server.starttls()
server.login(os.environ['EMAIL_ADDRESS'], os.environ['EMAIL_PASSWORD'])
server.quit()
print('‚úÖ SMTP connection successful!')
"

      - name: üöÄ Run cold outreach campaign
        run: python main.py
