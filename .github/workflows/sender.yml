name: Send Emails

on:
  schedule:
    - cron: "*/8 13-18 * * 1-5"  # Every 8 minutes, 2‚Äì7 PM WAT (13‚Äì18 UTC), Monday‚ÄìFriday
  workflow_dispatch:             # Manual trigger support

concurrency:
  group: lead-pipeline
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  send-emails:
    runs-on: ubuntu-latest

    env:
      EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
      IMAP_PORT: ${{ secrets.IMAP_PORT }}
      IMAP_SERVER: ${{ secrets.IMAP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: pip install --upgrade pip

      - name: Run sender script
        run: python sender.py

      - name: Commit updated leads (normal)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add leads/scraped_leads.ndjson
          git commit -m "üì¨ Update scraped_leads.ndjson after sending" || echo "No changes to commit"
          git pull --rebase origin main || true
          git push

      - name: Emergency commit in case of crash
        if: always()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add leads/scraped_leads.ndjson
          git diff --cached --quiet || git commit -m "üßØ Emergency save after send crash [bot]"
          git pull --rebase origin main || true
          git push || echo "‚ùó Emergency push failed"
